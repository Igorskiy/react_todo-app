{"version":3,"sources":["NewTodo.js","TodoList.js","Footer.js","App.js","index.js"],"names":["NewTodo","state","valueTitle","inputChangeHandler","event","_this","setState","target","value","submitHandler","preventDefault","prevState","props","addTodo","id","Date","now","title","completed","editable","this","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","React","Component","TodoList","editValue","editChangeHandler","_ref","_this2","_this$props","visibleTodos","todos","selectAllTodos","deleteTodo","handleKeyPress","editTodo","toggleTodoCompleted","cn","hidden","length","checked","every","todo","htmlFor","map","key","editing","onDoubleClick","concat","onClick","autoFocus","defaultValue","onKeyDown","e","Footer","clearCompletedHandler","setCurrentFilter","currentFilter","filterTypes","filter","Object","values","href","selected","App","undefined","localStorage","toConsumableArray","JSON","parse","all","active","setEditedValue","objectSpread2","allSelected","setItem","stringify","getFilteredTodos","_this$state","_this$state2","src_NewTodo","src_TodoList","editChangeHanlder","src_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7a3fbc23.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends React.Component {\n  state = { valueTitle: '' }\n\n  inputChangeHandler = (event) => {\n    this.setState({\n      valueTitle: event.target.value,\n    });\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n\n    this.setState((prevState) => {\n      if (!prevState.valueTitle) {\n        return prevState.valueTitle;\n      }\n\n      this.props.addTodo({\n        id: Date.now(),\n        title: prevState.valueTitle,\n        completed: false,\n        editable: false,\n      });\n\n      return { valueTitle: '' };\n    });\n  };\n\n  render() {\n    const { valueTitle } = this.state;\n\n    return (\n      <header className=\"header\">\n        <form onSubmit={this.submitHandler}>\n          <h1>todos</h1>\n\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={valueTitle}\n            onChange={this.inputChangeHandler}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\nexport default NewTodo;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst mark = 'Mark all as complete';\n\nclass TodoList extends React.Component {\n  state = { editValue: '' }\n\n  editChangeHandler = ({ target }) => {\n    this.setState(prevState => ({\n      editValue: target.value,\n    }));\n  }\n\n  render() {\n    const { visibleTodos,\n      todos,\n      selectAllTodos,\n      deleteTodo,\n      handleKeyPress,\n      editTodo,\n      toggleTodoCompleted } = this.props;\n\n    return (\n      <section className={cn(\n        'main',\n        { hidden: todos.length === 0 }\n      )}\n      >\n        <input\n          type=\"checkbox\"\n          onChange={selectAllTodos}\n          checked={todos.every(todo => todo.completed)}\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n        />\n        <label htmlFor=\"toggle-all\">{mark}</label>\n        <ul className=\"todo-list\">\n          {visibleTodos.map(todo => (\n            <li key={todo.id}>\n              <li\n                className={cn(\n                  {\n                    completed: todo.completed,\n                    editing: todo.editable,\n                  }\n                )}\n              >\n                <div className=\"view\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"toggle\"\n                    id={todo.id}\n                    checked={todo.completed}\n                    onChange={() => toggleTodoCompleted(todo.id)}\n                  />\n                  <label\n                    onDoubleClick={() => editTodo(todo.id)}\n                    htmlFor={`todo-${todo.id}`}\n                  >\n                    {todo.title}\n                  </label>\n                  <button\n                    type=\"button\"\n                    onClick={() => deleteTodo(todo.id)}\n                    className=\"destroy\"\n                  />\n                </div>\n                {todo.editable && (\n                  <input\n                    type=\"text\"\n                    className=\"edit\"\n                    // eslint-disable-next-line jsx-a11y/no-autofocus\n                    autoFocus\n                    defaultValue={todo.title}\n                    onChange={this.editChangeHandler}\n                    onKeyDown={\n                      e => handleKeyPress(e, todo.id, this.state.editValue)\n                    }\n                  />\n                )\n                }\n              </li>\n\n            </li>\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\nTodoList.propTypes = {\n  selectAllTodos: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  toggleTodoCompleted: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  handleKeyPress: PropTypes.func.isRequired,\n  visibleTodos: PropTypes\n    .arrayOf(PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    })).isRequired,\n  todos: PropTypes\n    .arrayOf(PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    })).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nconst Footer = ({\n  todos,\n  clearCompletedHandler,\n  setCurrentFilter,\n  currentFilter,\n  filterTypes,\n}) => (\n  <footer className={cn(\n    'footer',\n    { hidden: todos.length === 0 }\n  )}\n  >\n    {\n      (todos.filter(todo => !todo.completed).length === 1)\n        ? (\n          <span className=\"todo-count\">\n            {`${todos.filter(todo => !todo.completed).length} item left`}\n          </span>\n        )\n        : (\n          <span className=\"todo-count\">\n            {`${todos.filter(todo => !todo.completed).length} items left`}\n          </span>\n        )\n    }\n\n    <ul className=\"filters\">\n      {Object.values(filterTypes).map(filter => (\n        <li key={filter}>\n          <a\n            href={`#/${filter}`}\n            onClick={() => setCurrentFilter(filter)}\n            className={cn(\n              { selected: currentFilter === filterTypes[filter] }\n            )}\n          >\n            {filter}\n          </a>\n        </li>\n      ))}\n    </ul>\n\n    <button\n      type=\"button\"\n      className={cn(\n        'clear-completed',\n        { hidden: todos.filter(todo => todo.completed).length === 0 }\n      )}\n      onClick={clearCompletedHandler}\n    >\n    clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  clearCompletedHandler: PropTypes.func.isRequired,\n  setCurrentFilter: PropTypes.func.isRequired,\n  todos: PropTypes\n    .arrayOf(PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    })).isRequired,\n  currentFilter: PropTypes.string.isRequired,\n  filterTypes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\nexport default Footer;\n","import React from 'react';\nimport NewTodo from './NewTodo';\nimport TodoList from './TodoList';\nimport Footer from './Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: (() => {\n      if (localStorage.todos !== undefined) {\n        return [...JSON.parse(localStorage.todos)];\n      }\n\n      return [];\n    })(),\n\n    currentFilter: 'all',\n    filterTypes: {\n      all: 'all',\n      completed: 'completed',\n      active: 'active',\n    },\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.todos));\n  }\n\n  setEditedValue = (id, value) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          title: value,\n          editable: false,\n        };\n      }),\n    }));\n  }\n\n  editTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== id) {\n          return {\n            ...todo,\n            editable: false,\n          };\n        }\n\n        return {\n          ...todo,\n          editable: true,\n        };\n      }),\n    }));\n  };\n\n  handleKeyPress = (event, id, value) => {\n    if (event.key === 'Escape') {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          editable: false,\n        })),\n      }));\n    } else if (event.key === 'Enter') {\n      this.setEditedValue(id, value);\n    }\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n    }));\n  }\n\n  selectAllTodos = () => {\n    this.setState((prevState) => {\n      const allSelected = prevState.todos.every(todo => todo.completed);\n\n      return {\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          completed: !allSelected,\n        })),\n      };\n    });\n  }\n\n  toggleTodoCompleted = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  };\n\n  deleteTodo = (id) => {\n    localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  };\n\n  clearCompletedHandler = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  getFilteredTodos = (currentFilter) => {\n    const { todos, filterTypes } = this.state;\n\n    switch (currentFilter) {\n      case filterTypes.completed: return todos.filter(todo => todo.completed);\n      case filterTypes.active: return todos.filter(todo => !todo.completed);\n      case filterTypes.all: return todos;\n      default: return todos;\n    }\n  }\n\n  setCurrentFilter = (filter) => {\n    const { filterTypes } = this.state;\n\n    this.setState({\n      currentFilter: filterTypes[filter],\n    });\n  }\n\n  render() {\n    const {\n      todos,\n      currentFilter,\n      filterTypes,\n    } = this.state;\n    const visibleTodos = this.getFilteredTodos(currentFilter);\n\n    return (\n      <section className=\"todoapp\">\n        <NewTodo\n          addTodo={this.addTodo}\n        />\n        <TodoList\n          todos={todos}\n          visibleTodos={visibleTodos}\n          selectAllTodos={this.selectAllTodos}\n          deleteTodo={this.deleteTodo}\n          toggleTodoCompleted={this.toggleTodoCompleted}\n          handleKeyPress={this.handleKeyPress}\n          editChangeHanlder={this.editChangeHanlder}\n          editTodo={this.editTodo}\n        />\n        <Footer\n          todos={todos}\n          clearCompletedHandler={this.clearCompletedHandler}\n          setCurrentFilter={this.setCurrentFilter}\n          filterTypes={filterTypes}\n          currentFilter={currentFilter}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}